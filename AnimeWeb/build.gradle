/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */


plugins {
    id 'java-library'
    id 'maven-publish'
    id 'java'
    id 'war'
    id "org.hidetake.ssh" version "2.11.2"
}
war {
    manifest {
        attributes 'Main-Class': 'org.apache.catalina.startup.Bootstrap'
    }
}
apply plugin: 'application'
repositories {
    mavenLocal()
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/releases/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()

}

dependencies {
    // implementation 'com.github.jsimone:webapp-runner:8.5.11.3'

    implementation 'net.sourceforge.streamsupport:streamsupport:1.7.3'
    implementation 'mysql:mysql-connector-java:8.0.26'
    implementation 'org.jdbi:jdbi3-core:3.23.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'javax.json:javax.json-api:1.1.4'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:fluent-hc:4.5.13'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'org.jdbi:jdbi3-core:3.23.0'
    implementation 'javax.servlet:jstl:1.2'
    implementation 'org.glassfish:javax.json:1.1.4'
    implementation 'junit:junit:3.8.1'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.zaxxer:HikariCP:3.1.0'
    implementation 'net.coobird:thumbnailator:0.4.13'

}

tasks.withType(Test) {
    systemProperty 'junit.jupiter.execution.parallel.enabled', true
    jvmArgs '--add-opens', 'java.base/java.time=ALL-UNNAMED'
}
//
group = 'org.example'
description = 'AnimeWeb Maven Webapp'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
apply plugin: 'org.hidetake.ssh'
remotes {
    host {
        host = '34.126.83.96'
        user = 'g20130012'
        identity =file('C:/Users/Admin/.ssh/id_rsa')
    }
}
ssh.settings {
    knownHosts = allowAnyHosts
}
task docker_app_start {
    doLast {
        println 'begin docker_app_start'
        ssh.run {
            session(remotes.host) {
                execute 'docker stop tomcat9', ignoreError: true
                execute 'docker run -it --rm -d ' +
                        '--name tomcat9 ' +
                        '-v /usr/deploy:/usr/local/tomcat/webapps ' +
                        '-p 80:8080 ' +
                        'tomcat:9.0&'
            }
        }
    }
}
task docker_upload_file_to_server {
    doLast {
        println 'begin docker_upload_file_to_server'
        ssh.run {
            session(remotes.host) {
                remove '/usr/deploy/AnimeWeb.war'

                put from: "${project.projectDir}/build/libs/AnimeWeb.war",
                        into: "/usr/deploy/AnimeWeb.war"
            }
        }
    }
}

task docker_deploy {
    docker_deploy.dependsOn docker_app_start
    docker_deploy.dependsOn docker_upload_file_to_server
    docker_deploy.dependsOn build
    tasks.getByName('docker_app_start').mustRunAfter docker_upload_file_to_server
}

targetCompatibility = JavaVersion.VERSION_11
